{"version":3,"sources":["webpack:///static/6.4b11ffce.chunk.js","webpack:///./catalog/pages/es/plugins/payment_orders.md?eaba","webpack:///./catalog/pages/es/plugins/payment_orders.md"],"names":["webpackJsonp","783","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","797"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAgBD,EAAQ,IACxBE,EAA2BF,EAAQ,IACnCG,EAAuBH,EAAQ,KAASG,YACxCA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAST,EAAQ,OAEjCU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/6.4b11ffce.chunk.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 783:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(15);\n    var createReactClass = __webpack_require__(45);\n    var PageRenderer = __webpack_require__(290).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(797)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../../../node_modules/raw-loader/index.js!./payment_orders.md\", function() {\n            component.setState({\n              content: require(\"!!../../../../node_modules/raw-loader/index.js!./payment_orders.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 797:\n/***/ (function(module, exports) {\n\nmodule.exports = \"### Crea órdenes de pago desde tu servicio\\n\\n```hint\\nPara crear una Orden de Pago es necesario poseer un API Key y un Access Token. Para obtenerlos se deben seguir los siguientes pasos\\n\\n1) Ingresar a [Consola](https://mobbex.com/console)\\n2) Dirigirse desde el menú superior a \\\"Desarrollador\\\"\\n3) Crear una nueva aplicación o utilizar una existente\\n4) Obtener el acceso a una Entidad mediante la opción \\\"Solicitar Acceso\\\" o utilizar un acceso ya concedido mostrado en el listado de \\\"Entidades Autorizadas\\\"\\n\\nHabiendo obtenido ambos keys se puede proceder a generar la solicitud para crear una Orden de Pago. Algunos ejemplos a continuación.\\n```\\n\\n#### URL\\n```\\nhttps://mobbex.com/p/payment_order\\n```\\n\\n#### Cabeceras (Headers)\\n- ___x-api-key___: Clave API de su aplicación\\n- ___x-access-token___: Token de Acceso a la entidad para la cual desea realizar la operación.\\n\\n#### Parametros (POST Params)\\n\\n_Requeridos_\\n- ```total```: Monto de la operación. Formato XXX.xx donde el ___PUNTO___ es el separador decimal.\\n- ```description```: Descripción de la operación que será mostrada en el Checkout.\\n\\n_Opcionales_\\n- ```email```: El email al cual será enviada la orden de pago generada. Si no se provee se usa el teléfono o se retorna la URL\\n- ```phone```: Número de Celular al cual será enviada la Orden Generada. Si no se provee se usa email o se retorna la URL.\\n- ```reference```: Factura, Recibo o referencia del pago a Realizar. Puede ser un identificador de un sistema externo para seguimiento.\\n- ```due```: Fecha de vencimiento de la Orden. Formato: day, month, year. Ej: ```due: { day: 1, month: 2. year: 19 }```\\n- ```secondDue```: Segundo vencimiento de la Orden. Formato: days, surcharge, días al segundo vencimiento y recargo adicional. Ej: ```secondDue: { days: 10, surcharge: 100 }```\\n- ```return_url```: URL a la cual será enviado el usuario al finalizar el pago.\\n- ```webhook```: URL a la cual será informado el pago mediante WebHooks ( POST )\\n\\n__CURL__\\n```code\\nlang: bash\\n---\\ncurl --request POST \\\\\\n  --url https://mobbex.com/p/payment_order \\\\\\n  --header 'cache-control: no-cache' \\\\\\n  --header 'content-type: multipart/form-data; \\\\\\n  --header 'x-api-key: zJ8LFTBX6Ba8D611e9io13fDZAwj0QmKO1Hn1yIj' \\\\\\n  --header 'x-access-token: d31f0721-2f85-44e7-bcc6-15e19d1a53cc' \\\\\\n  --form total=100 \\\\\\n  --form 'email=some@email.com' \\\\\\n  --form 'description=Some Description'\\n```\\n\\n__Javascript__\\n```code\\nlang: javascript\\n---\\nvar data = new FormData();\\ndata.append(\\\"total\\\", \\\"100\\\");\\ndata.append(\\\"email\\\", \\\"some@email.com\\\");\\ndata.append(\\\"description\\\", \\\"Some Description\\\");\\nvar xhr = new XMLHttpRequest();\\nxhr.withCredentials = true;\\nxhr.addEventListener(\\\"readystatechange\\\", function () {\\n  if (this.readyState === 4) {\\n    console.log(this.responseText);\\n  }\\n});\\nxhr.open(\\\"POST\\\", \\\"https://mobbex.com/p/payment_order\\\");\\nxhr.setRequestHeader(\\\"x-api-key\\\", \\\"zJ8LFTBX6Ba8D611e9io13fDZAwj0QmKO1Hn1yIj\\\");\\nxhr.setRequestHeader(\\\"x-access-token\\\", \\\"d31f0721-2f85-44e7-bcc6-15e19d1a53cc\\\");\\nxhr.setRequestHeader(\\\"cache-control\\\", \\\"no-cache\\\");\\nxhr.send(data);\\n```\\n\\n__PHP__\\n```code\\nlang: php\\n---\\n<?php  \\n$request = new HttpRequest();\\n$request->setUrl('https://mobbex.com/p/payment_order');\\n$request->setMethod(HTTP_METH_POST);  \\n$request->setHeaders(array(\\n  'cache-control' => 'no-cache',\\n  'content-type' => 'application/x-www-form-urlencoded',\\n  'x-access-token' => 'd31f0721-2f85-44e7-bcc6-15e19d1a53cc',\\n  'x-api-key' => 'zJ8LFTBX6Ba8D611e9io13fDZAwj0QmKO1Hn1yIj'\\n));  \\n$request->setContentType('application/x-www-form-urlencoded');\\n$request->setPostFields(array(\\n  'total' => '100',\\n  'email' => 'some@email.com',\\n  'description' => 'Some Description'\\n));  \\ntry {\\n  $response = $request->send();    \\n  echo $response->getBody();\\n} catch (HttpException $ex) {\\n  echo $ex;\\n}\\n```\\n\\n#### Respuesta: \\n\\nTenga en cuenta que las respuestas del servicio siempre serán en formato JSON.\\n\\n__JSON__\\n```code\\nlang: json\\n---\\n{\\n    \\\"result\\\": true,\\n    \\\"data\\\": {\\n        \\\"_id\\\": \\\"5c7fa4c33e1b3dXXXXXXXXXXXXX\\\",\\n        \\\"uid\\\": \\\"JlwOU4dzj\\\",\\n        \\\"shorten_url\\\": \\\"http://mbbx.co/XXXXXX\\\",\\n        \\\"secondDueSurcharge\\\": 0,\\n        \\\"sources\\\": [],\\n        \\\"reference\\\": \\\"mi_referencia_123\\\",\\n        \\\"return_url\\\": \\\"\\\",\\n        \\\"webhook\\\": \\\"\\\",\\n        \\\"description\\\": \\\"Orden de Pago con 1 Vencimiento\\\",\\n        \\\"amount\\\": 100,\\n        \\\"currency\\\": \\\"ARS\\\",\\n        \\\"entity\\\": \\\"5761a3dd8aad6c120042b287\\\",\\n        \\\"phone\\\": \\\"\\\",\\n        \\\"dueDate\\\": \\\"2019-12-25T00:00:00.000Z\\\",\\n        \\\"secondDueDate\\\": null,\\n        \\\"identifier\\\": \\\"orden-de-pago-con-1-vencimiento\\\",\\n    }\\n}\\n```\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/6.4b11ffce.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../../../node_modules/raw-loader/index.js!./payment_orders.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../../../node_modules/raw-loader/index.js!./payment_orders.md\", function() {\n            component.setState({\n              content: require(\"!!../../../../node_modules/raw-loader/index.js!./payment_orders.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/pages/es/plugins/payment_orders.md\n// module id = 783\n// module chunks = 6","module.exports = \"### Crea órdenes de pago desde tu servicio\\n\\n```hint\\nPara crear una Orden de Pago es necesario poseer un API Key y un Access Token. Para obtenerlos se deben seguir los siguientes pasos\\n\\n1) Ingresar a [Consola](https://mobbex.com/console)\\n2) Dirigirse desde el menú superior a \\\"Desarrollador\\\"\\n3) Crear una nueva aplicación o utilizar una existente\\n4) Obtener el acceso a una Entidad mediante la opción \\\"Solicitar Acceso\\\" o utilizar un acceso ya concedido mostrado en el listado de \\\"Entidades Autorizadas\\\"\\n\\nHabiendo obtenido ambos keys se puede proceder a generar la solicitud para crear una Orden de Pago. Algunos ejemplos a continuación.\\n```\\n\\n#### URL\\n```\\nhttps://mobbex.com/p/payment_order\\n```\\n\\n#### Cabeceras (Headers)\\n- ___x-api-key___: Clave API de su aplicación\\n- ___x-access-token___: Token de Acceso a la entidad para la cual desea realizar la operación.\\n\\n#### Parametros (POST Params)\\n\\n_Requeridos_\\n- ```total```: Monto de la operación. Formato XXX.xx donde el ___PUNTO___ es el separador decimal.\\n- ```description```: Descripción de la operación que será mostrada en el Checkout.\\n\\n_Opcionales_\\n- ```email```: El email al cual será enviada la orden de pago generada. Si no se provee se usa el teléfono o se retorna la URL\\n- ```phone```: Número de Celular al cual será enviada la Orden Generada. Si no se provee se usa email o se retorna la URL.\\n- ```reference```: Factura, Recibo o referencia del pago a Realizar. Puede ser un identificador de un sistema externo para seguimiento.\\n- ```due```: Fecha de vencimiento de la Orden. Formato: day, month, year. Ej: ```due: { day: 1, month: 2. year: 19 }```\\n- ```secondDue```: Segundo vencimiento de la Orden. Formato: days, surcharge, días al segundo vencimiento y recargo adicional. Ej: ```secondDue: { days: 10, surcharge: 100 }```\\n- ```return_url```: URL a la cual será enviado el usuario al finalizar el pago.\\n- ```webhook```: URL a la cual será informado el pago mediante WebHooks ( POST )\\n\\n__CURL__\\n```code\\nlang: bash\\n---\\ncurl --request POST \\\\\\n  --url https://mobbex.com/p/payment_order \\\\\\n  --header 'cache-control: no-cache' \\\\\\n  --header 'content-type: multipart/form-data; \\\\\\n  --header 'x-api-key: zJ8LFTBX6Ba8D611e9io13fDZAwj0QmKO1Hn1yIj' \\\\\\n  --header 'x-access-token: d31f0721-2f85-44e7-bcc6-15e19d1a53cc' \\\\\\n  --form total=100 \\\\\\n  --form 'email=some@email.com' \\\\\\n  --form 'description=Some Description'\\n```\\n\\n__Javascript__\\n```code\\nlang: javascript\\n---\\nvar data = new FormData();\\ndata.append(\\\"total\\\", \\\"100\\\");\\ndata.append(\\\"email\\\", \\\"some@email.com\\\");\\ndata.append(\\\"description\\\", \\\"Some Description\\\");\\nvar xhr = new XMLHttpRequest();\\nxhr.withCredentials = true;\\nxhr.addEventListener(\\\"readystatechange\\\", function () {\\n  if (this.readyState === 4) {\\n    console.log(this.responseText);\\n  }\\n});\\nxhr.open(\\\"POST\\\", \\\"https://mobbex.com/p/payment_order\\\");\\nxhr.setRequestHeader(\\\"x-api-key\\\", \\\"zJ8LFTBX6Ba8D611e9io13fDZAwj0QmKO1Hn1yIj\\\");\\nxhr.setRequestHeader(\\\"x-access-token\\\", \\\"d31f0721-2f85-44e7-bcc6-15e19d1a53cc\\\");\\nxhr.setRequestHeader(\\\"cache-control\\\", \\\"no-cache\\\");\\nxhr.send(data);\\n```\\n\\n__PHP__\\n```code\\nlang: php\\n---\\n<?php  \\n$request = new HttpRequest();\\n$request->setUrl('https://mobbex.com/p/payment_order');\\n$request->setMethod(HTTP_METH_POST);  \\n$request->setHeaders(array(\\n  'cache-control' => 'no-cache',\\n  'content-type' => 'application/x-www-form-urlencoded',\\n  'x-access-token' => 'd31f0721-2f85-44e7-bcc6-15e19d1a53cc',\\n  'x-api-key' => 'zJ8LFTBX6Ba8D611e9io13fDZAwj0QmKO1Hn1yIj'\\n));  \\n$request->setContentType('application/x-www-form-urlencoded');\\n$request->setPostFields(array(\\n  'total' => '100',\\n  'email' => 'some@email.com',\\n  'description' => 'Some Description'\\n));  \\ntry {\\n  $response = $request->send();    \\n  echo $response->getBody();\\n} catch (HttpException $ex) {\\n  echo $ex;\\n}\\n```\\n\\n#### Respuesta: \\n\\nTenga en cuenta que las respuestas del servicio siempre serán en formato JSON.\\n\\n__JSON__\\n```code\\nlang: json\\n---\\n{\\n    \\\"result\\\": true,\\n    \\\"data\\\": {\\n        \\\"_id\\\": \\\"5c7fa4c33e1b3dXXXXXXXXXXXXX\\\",\\n        \\\"uid\\\": \\\"JlwOU4dzj\\\",\\n        \\\"shorten_url\\\": \\\"http://mbbx.co/XXXXXX\\\",\\n        \\\"secondDueSurcharge\\\": 0,\\n        \\\"sources\\\": [],\\n        \\\"reference\\\": \\\"mi_referencia_123\\\",\\n        \\\"return_url\\\": \\\"\\\",\\n        \\\"webhook\\\": \\\"\\\",\\n        \\\"description\\\": \\\"Orden de Pago con 1 Vencimiento\\\",\\n        \\\"amount\\\": 100,\\n        \\\"currency\\\": \\\"ARS\\\",\\n        \\\"entity\\\": \\\"5761a3dd8aad6c120042b287\\\",\\n        \\\"phone\\\": \\\"\\\",\\n        \\\"dueDate\\\": \\\"2019-12-25T00:00:00.000Z\\\",\\n        \\\"secondDueDate\\\": null,\\n        \\\"identifier\\\": \\\"orden-de-pago-con-1-vencimiento\\\",\\n    }\\n}\\n```\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/pages/es/plugins/payment_orders.md\n// module id = 797\n// module chunks = 6"],"sourceRoot":""}