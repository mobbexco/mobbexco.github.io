{"version":3,"sources":["webpack:///static/9.18a49f83.chunk.js","webpack:///./catalog/pages/es/plugins/client.md?387b","webpack:///./catalog/pages/es/plugins/client.md"],"names":["webpackJsonp","588","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","601"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,OAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,IACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/9.18a49f83.chunk.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 588:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(6);\n    var createReactClass = __webpack_require__(32);\n    var PageRenderer = __webpack_require__(209).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(601)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../../../node_modules/raw-loader/index.js!./client.md\", function() {\n            component.setState({\n              content: require(\"!!../../../../node_modules/raw-loader/index.js!./client.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 601:\n/***/ (function(module, exports) {\n\nmodule.exports = \"### Cliente Mobbex (cli)\\n\\nEl servicio de cliente por consola le permite acceder a Mobbex llamando al proceso desde otro sistema sin hacer mayores modificaciones al mismo y sin implementar el API. Actualmente sólo está soportado el módulo de Fidelización.\\n\\n#### Windows\\n- Descargar versión para Windows: [Windows 1.1.0-dev2](https://github.com/mobbexdev/mobbex-cli/releases/tag/1.1.0-dev2)\\n\\n\\n##### Ejecución\\n\\n- Fidelización: Carga de Puntos\\n\\n> Recuerde que es necesario configurar como variables de Entorno el API-Key y Audit-Key provistos antes de la ejecución\\n\\n```shell\\nmobbex-cli.exe loyalty {CUIT} charge -c {CREDENCIAL} -p {PUNTOS}\\n```\\n\\n- Ejecución desde Visual Basic .NET\\n\\n```vb\\nDim oProcess As New Process()\\nDim oStartInfo As New ProcessStartInfo(\\\"mobbex-cli.exe\\\", \\\"... parametros ...\\\")\\noStartInfo.CreateNoWindow = True\\noStartInfo.UseShellExecute = False\\noStartInfo.RedirectStandardOutput = True\\n\\n' Variables\\noStartInfo.EnvironmentVariables.Add(\\\"APIKEY\\\", \\\"API Key\\\");\\noStartInfo.EnvironmentVariables.Add(\\\"AUDITKEY\\\", \\\"Audit Key\\\");\\n\\noProcess.StartInfo = oStartInfo\\noProcess.Start()\\n\\nDim sOutput As String\\n\\tUsing oStreamReader As System.IO.StreamReader = oProcess.StandardOutput\\n    sOutput = oStreamReader.ReadToEnd()\\nEnd Using\\n\\n' Resultado\\nConsole.WriteLine(sOutput)\\n```\\n\\n__RESPUESTAS__\\n\\nEl cli siempre responderá en la consola en modo texto de la siguiente manera:\\n\\n- OK: {ID Operación}\\n- ERROR: {Mensaje de Error}\\n\\nCuando la operación finaliza de manera correcta se retorna la palabra \\\"OK: ...\\\" con el código de la operación realizada lo que permitirá generar otras operaciones cómo por ejemplo la reversión de la misma. Usted debe almacenar el código devuelto.\\nCuando la operación finaliza con un error se retorna la palabra \\\"ERROR: ...\\\" con el mensaje correspondiente al error que se generó, el mismo puede ser mostrado al usuario.\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/9.18a49f83.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../../../node_modules/raw-loader/index.js!./client.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../../../node_modules/raw-loader/index.js!./client.md\", function() {\n            component.setState({\n              content: require(\"!!../../../../node_modules/raw-loader/index.js!./client.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/pages/es/plugins/client.md\n// module id = 588\n// module chunks = 9","module.exports = \"### Cliente Mobbex (cli)\\n\\nEl servicio de cliente por consola le permite acceder a Mobbex llamando al proceso desde otro sistema sin hacer mayores modificaciones al mismo y sin implementar el API. Actualmente sólo está soportado el módulo de Fidelización.\\n\\n#### Windows\\n- Descargar versión para Windows: [Windows 1.1.0-dev2](https://github.com/mobbexdev/mobbex-cli/releases/tag/1.1.0-dev2)\\n\\n\\n##### Ejecución\\n\\n- Fidelización: Carga de Puntos\\n\\n> Recuerde que es necesario configurar como variables de Entorno el API-Key y Audit-Key provistos antes de la ejecución\\n\\n```shell\\nmobbex-cli.exe loyalty {CUIT} charge -c {CREDENCIAL} -p {PUNTOS}\\n```\\n\\n- Ejecución desde Visual Basic .NET\\n\\n```vb\\nDim oProcess As New Process()\\nDim oStartInfo As New ProcessStartInfo(\\\"mobbex-cli.exe\\\", \\\"... parametros ...\\\")\\noStartInfo.CreateNoWindow = True\\noStartInfo.UseShellExecute = False\\noStartInfo.RedirectStandardOutput = True\\n\\n' Variables\\noStartInfo.EnvironmentVariables.Add(\\\"APIKEY\\\", \\\"API Key\\\");\\noStartInfo.EnvironmentVariables.Add(\\\"AUDITKEY\\\", \\\"Audit Key\\\");\\n\\noProcess.StartInfo = oStartInfo\\noProcess.Start()\\n\\nDim sOutput As String\\n\\tUsing oStreamReader As System.IO.StreamReader = oProcess.StandardOutput\\n    sOutput = oStreamReader.ReadToEnd()\\nEnd Using\\n\\n' Resultado\\nConsole.WriteLine(sOutput)\\n```\\n\\n__RESPUESTAS__\\n\\nEl cli siempre responderá en la consola en modo texto de la siguiente manera:\\n\\n- OK: {ID Operación}\\n- ERROR: {Mensaje de Error}\\n\\nCuando la operación finaliza de manera correcta se retorna la palabra \\\"OK: ...\\\" con el código de la operación realizada lo que permitirá generar otras operaciones cómo por ejemplo la reversión de la misma. Usted debe almacenar el código devuelto.\\nCuando la operación finaliza con un error se retorna la palabra \\\"ERROR: ...\\\" con el mensaje correspondiente al error que se generó, el mismo puede ser mostrado al usuario.\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/pages/es/plugins/client.md\n// module id = 601\n// module chunks = 9"],"sourceRoot":""}